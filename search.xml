<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[半小时Docker简单入门]]></title>
    <url>%2F2019%2F12%2F30%2F%E5%8D%8A%E5%B0%8F%E6%97%B6Docker%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[安装最新Docker这里安装主要基于Linux环境下的安装，Windows环境可以直接使用Docker Desktop。 安装 Docker 官方源 sudo yum-config-manager \ --add-repo \ https://download.docker.com/linux/centos/docker-ce.repo 如果这里提示yum-config-manager：未找到命令，我们需要先安装yum工具。 yum install -y yum-utils 更新源 yum makecache fast 安装docker-ce yum install -y docker-ce 设置开机执行 systemctl enable docker 启动docker systemctl start docker 检查docker版本 docker version 镜像操作下载镜像docker pull name:tag 默认镜像的下载地址为https://hub.docker.com/ 由于镜像地址在国外，但是由于显而易见的网络原因，拉取镜像的过程非常耗时，严重影响使用 Docker 的体验。 因此我们需要将Docker的镜像地址执行国内的第三方仓库，这样可以极大的提高国内网络访问Docker Hub的速度。 curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://f1361db2.m.daocloud.io #该脚本可以将 --registry-mirror 加入到你的 Docker 配置文件 /etc/docker/daemon.json 中 #同时，您也可以自己编辑vim /etc/docker/deamon.json文件，注意一定要符合json格式要求。 # { # &quot;registry-mirrors&quot;: [&quot;http://f1361db2.m.daocloud.io&quot;] # } 查看本地已下载镜像docker images REPOSITORY：表示镜像的仓库源 TAG：镜像的标签 IMAGE ID：镜像ID CREATED：镜像创建时间 SIZE：镜像大小 删除本地已下载镜像docker rmi image_id 端口操作docker run --name name -d -p 8080:80 nginx:1.17 –name：为容器指定一个名称。 -d：后台运行容器，并返回容器ID。 -p：指定端口映射，格式为：主机(宿主)端口:容器端口。同时支持多端口映射， -p 80-90:80-90。 挂载操作docker run --name name -d -p 8080:80 -v /data:/usr/share/nginx/html nginx:1.17 -v：绑定一个卷，前面是宿主机的目录，后面是容器目录。 日志操作docker logs -f 容器名称或容器ID 容器操作docker exec -it 容器名称 sh -i：标准输入。 -t：分配一个伪终端。 删除容器docker rm -f 容器名称 -f：通过 SIGKILL 信号强制删除一个运行中的容器。 如果不加 -f 则无法删除一个正在运行的容器，需要首先docker stop 容器名称。 网络操作docker inspect 容器名称 通过Dockerfile文件构建镜像docker built . -t name:tag 使用当前目录的Dockerfile创建镜像。 -t：指定构建镜像的名字和标签。 -f：指定要使用的Dockerfile的完整路径。 -m：设置内存最大值。 Dockerfile示例FROM centos #制作base image 基础镜像，尽量使用官方的image作为base image LABEL version=&quot;1.0&quot; #容器元信息，帮助信息，Metadata，类似于代码注释 LABEL maintainer=&quot;author&quot; #容器作者信息 #对于复杂的RUN命令，避免无用的分层，多条命令用反斜线换行，合成一条命令！ RUN yum update &amp;&amp; yum install -y vim \ Python-dev #反斜线换行 WORKDIR /root #相当于linux的cd命令，改变目录，尽量使用绝对路径！！！不要用RUN cd WORKDIR /test # 如果没有就自动创建 ADD test.tar.gz / # 添加到根目录并解压 COPY hello test/ # 等同于上述ADD效果 ADD与COPY - 优先使用COPY命令 -ADD除了COPY功能还有解压功能 ENV # 环境变量，尽可能使用ENV增加可维护性 ENV MYSQL_VERSION 5.6 # 设置一个mysql常量 安装Docker-Composesudo curl -L &quot;https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose docker-compose --version #这里使用的是1.25.4版本，如果需要其他的版本，打开`https://github.com/docker/compose/releases`找到需要的版本号进行替换即可]]></content>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
</search>
